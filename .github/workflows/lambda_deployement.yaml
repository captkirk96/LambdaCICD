name: Deploy Lambda Function

on:
  push:
    paths:
      - 'lambdas/**'  # Trigger workflow for changes in any file within 'lambdas' directory

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetch the last two commits to compare changes

      - name: Check modified files
        id: check_changes
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          if echo "$CHANGED_FILES" | grep -q 'lambdas/stateful/person-detection-nht/lambda_function.py'; then
            echo "RUN_PERSON_TESTS=true" >> $GITHUB_ENV
          fi
          
          if echo "$CHANGED_FILES" | grep -q 'lambdas/stateful/car-detection-nht/lambda_function.py'; then
            echo "RUN_VEHICLE_TESTS=true" >> $GITHUB_ENV
          fi
          
          if echo "$CHANGED_FILES" | grep -q 'lambdas/stateless/fall-detection-nht/lambda_function.py'; then
            echo "RUN_FALL_TESTS=true" >> $GITHUB_ENV
          fi
          
          if echo "$CHANGED_FILES" | grep -q 'lambdas/stateless/fire-detection-nht/lambda_function.py'; then
            echo "RUN_FIRE_TESTS=true" >> $GITHUB_ENV
          fi

      - name: Set up Python
        if: env.RUN_PERSON_TESTS == 'true' || env.RUN_VEHICLE_TESTS == 'true' || env.RUN_FALL_TESTS == 'true' || env.RUN_FIRE_TESTS == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        if: env.RUN_PERSON_TESTS == 'true' || env.RUN_VEHICLE_TESTS == 'true' || env.RUN_FALL_TESTS == 'true' || env.RUN_FIRE_TESTS == 'true'
        run: |
          pip install pytest boto3 opencv-python-headless requests pymongo

      - name: Run tests for person detection
        if: env.RUN_PERSON_TESTS == 'true'
        run: |
          export PYTHONPATH=$(pwd)
          pytest tests/test_lambda.py --capture=no
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-south-1"

      - name: Run tests for vehicle detection
        if: env.RUN_VEHICLE_TESTS == 'true'
        run: |
          export PYTHONPATH=$(pwd)
          pytest tests/test_vehicle.py --capture=no
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-south-1"
      
      - name: Run tests for fall detection
        if: env.RUN_FALL_TESTS == 'true'
        run: |
          export PYTHONPATH=$(pwd)
          pytest tests/test_fall.py --capture=no
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-south-1"

      - name: Run tests for fire detection
        if: env.RUN_FIRE_TESTS == 'true'
        run: |
          export PYTHONPATH=$(pwd)
          pytest tests/test_fire.py --capture=no
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-south-1"

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Install zip tool
        uses: montudor/action-zip@v1

      - name: Identify modified Lambda functions
        id: detect
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E '^lambdas/.+/.*$' || true)
          echo "CHANGED_FILES=$(echo $CHANGED_FILES | tr '\n' ' ')" >> $GITHUB_ENV
          echo "Changed files: $CHANGED_FILES"

      - name: Deploy Lambda functions
        if: env.CHANGED_FILES
        run: |
          for file in $CHANGED_FILES; do
            if [[ $file == *"lambda_function.py" ]]; then
              FUNCTION_NAME=$(basename $(dirname $file))
              cd $(dirname $file)
              zip -r code.zip .
              aws lambda update-function-code \
                --function-name arn:aws:lambda:ap-south-1:278699821793:function:$FUNCTION_NAME \
                --zip-file fileb://code.zip
              cd -
            fi
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-south-1"
